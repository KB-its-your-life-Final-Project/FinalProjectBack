<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lighthouse.buildingRegister.mapper.BuildingRegisterMapper">

    <resultMap id="BuildingRegisterVOMap" type="com.lighthouse.buildingRegister.vo.BuildingRegisterVO" autoMapping="true">
        <id property="id" column="id" />
    </resultMap>

    <resultMap id="BuildingRegisterWithStatusVOMap" type="com.lighthouse.buildingRegister.vo.BuildingRegisterWithStatusVO" autoMapping="true">
        <id property="id" column="id" />
    </resultMap>

    <!-- 1. building_register 저장 -->
    <!-- keyProperty="id"로 VO에 저장된 id값이 setter로 저장됨   -->
    <insert id="insertBuildingRegister" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ${API_BUILDING_REGISTER} (
            type, res_addr_dong, res_number,
            res_user_addr, comm_addr_lot_number, comm_addr_road_name, res_note,
             res_violation_status,
            req_dong, req_ho, latitude, longitude
        ) VALUES (
                    #{type}, #{resAddrDong}, #{resNumber},
                     #{resUserAddr}, #{commAddrLotNumber}, #{commAddrRoadName}, #{resNote},
                       #{resViolationStatus}, 
                     #{reqDong}, #{reqHo}, #{latitude}, #{longitude}
                 )
    </insert>

    <!-- 2. building_register_detail -->
    <insert id="insertBuildingRegisterDetail">
        INSERT INTO ${API_BUILDING_REGISTER_DETAIL} (register_id, res_type, res_contents)
        VALUES (#{registerId}, #{resType}, #{resContents})
    </insert>

    <!-- 3. building_register_building_status -->
    <insert id="insertBuildingRegisterStatus">
        INSERT INTO ${API_BUILDING_REGISTER_BUILDING_STATUS} (register_id, res_type, res_floor, res_structure, res_use_type, res_area)
        VALUES (#{registerId}, #{resType}, #{resFloor}, #{resStructure}, #{resUseType}, #{resArea})
    </insert>

    <!-- 4. building_register_parking_lot_status -->
    <insert id="insertBuildingRegisterParkingLot">
        INSERT INTO ${API_BUILDING_REGISTER_PARKING_LOT_STATUS} (register_id, res_area, res_number, res_type)
        VALUES (#{registerId}, #{resArea}, #{resNumber}, #{resType})
    </insert>

    <!-- 5. building_register_auth_status -->
    <insert id="insertBuildingRegisterAuth">
        INSERT INTO ${API_BUILDING_REGISTER_AUTH_STATUS} (register_id, res_type, res_type1, res_contents)
        VALUES (#{registerId}, #{resType}, #{resType1}, #{resContents})
    </insert>

    <!-- 6. building_register_change -->
    <insert id="insertBuildingRegisterChange">
        INSERT INTO ${API_BUILDING_REGISTER_CHANGE} (register_id, res_change_date, res_change_reason, res_note, res_issue_date, res_issue_ogz_nm, res_ori_ginal_data)
        VALUES (#{registerId}, #{resChangeDate}, #{resChangeReason}, #{resNote}, #{resIssueDate}, #{resIssueOgzNm}, #{resOriGinalData})
    </insert>

    <!-- 7. building_register_owner -->
    <insert id="insertBuildingRegisterOwner">
        INSERT INTO ${API_BUILDING_REGISTER_OWNER} (register_id, res_owner, res_identity_no, res_user_addr, res_ownership_stake, res_change_date, res_change_reason)
        VALUES (#{registerId}, #{resOwner}, #{resIdentityNo}, #{resUserAddr}, #{resOwnershipStake}, #{resChangeDate}, #{resChangeReason})
    </insert>

    <!-- 8. building_register_license_class -->
    <insert id="insertBuildingRegisterLicense">
        INSERT INTO ${API_BUILDING_REGISTER_LICENSE_CLASS} (register_id, res_license_no, res_type, res_user_nm)
        VALUES (#{registerId}, #{resLicenseNo}, #{resType}, #{resUserNm})
    </insert>

    <!-- 9. 위도/경도로 건물 정보 조회 (단건 조회)-->
    <select id="getBuildingRegisterByLocation" resultMap="BuildingRegisterVOMap">
        SELECT
            *
        FROM
            ${API_BUILDING_REGISTER}
        WHERE
            latitude BETWEEN #{lat} - 0.001 AND #{lat} + 0.001
          AND longitude BETWEEN #{lng} - 0.001 AND #{lng} + 0.001
        LIMIT 1;
    </select>

    <!-- 10. 위도/경도로 건물 정보와 상세 정보 조회 (다건 조회)-->
    <select id="getBuildingRegisterWithStatusByLocation" resultMap="BuildingRegisterWithStatusVOMap">
        SELECT
            A.id, A.type, A.res_addr_dong, A.res_number, A.res_user_addr, A.comm_addr_lot_number,
            A.comm_addr_road_name, A.res_note, A.res_violation_status, A.req_dong, A.req_ho,
            A.latitude, A.longitude,
            B.register_id, B.res_type, B.res_floor, B.res_structure, B.res_use_type, B.res_area
        FROM
            ${API_BUILDING_REGISTER} A
                LEFT JOIN
            ${API_BUILDING_REGISTER_BUILDING_STATUS} B
            ON
                A.id = B.register_id
        WHERE
            A.latitude BETWEEN #{lat} - 0.001 AND #{lat} + 0.001
          AND A.longitude BETWEEN #{lng} - 0.001 AND #{lng} + 0.001
        ORDER BY B.res_floor;
    </select>

</mapper>
